name: Release on Tag

on:
  push:
    tags:
      - "opendos-v*"

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract tag name
        id: tag
        run: |
          echo "GITHUB_REF=$GITHUB_REF"
          echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"

      - name: Get latest 5 commits
        id: changelog
        run: |
          echo "Fetching changelog..."
          LOG=$(git log -n 5 --pretty="* %s (%h)")
          echo "$LOG"
          echo "log<<EOF" >> "$GITHUB_OUTPUT"
          echo "$LOG" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Find previous release (if exists)
        id: previous
        run: |
          PREV_TAG=$(git tag --sort=-creatordate | grep "^opendos-v" | grep -v "${{ steps.tag.outputs.TAG_NAME }}" | head -n 1 || true)
          echo "Found previous tag: $PREV_TAG"
          echo "PREV_TAG=$PREV_TAG" >> "$GITHUB_OUTPUT"

      - name: Get changelog link
        id: compare_url
        run: |
          if [ -n "${{ steps.previous.outputs.PREV_TAG }}" ]; then
            echo "Found previous tag, generating compare URL"
            echo "url=https://github.com/${{ github.repository }}/compare/${{ steps.previous.outputs.PREV_TAG }}...${{ steps.tag.outputs.TAG_NAME }}" >> "$GITHUB_OUTPUT"
          else
            echo "No previous tag found, generating commit URL"
            echo "url=https://github.com/${{ github.repository }}/commits/${{ steps.tag.outputs.TAG_NAME }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Install GitHub CLI
        uses: cli/cli-action@v2

      - name: Find and download opendos.img artifact from successful run
        id: download_artifact
        run: |
          echo "Searching for latest successful workflow run with 'opendos.img' artifact..."
          RUNS=$(gh api -X GET /repos/${{ github.repository }}/actions/runs?status=success&per_page=20)
          RUN_IDS=$(echo "$RUNS" | jq -r '.workflow_runs[].id')

          for RUN_ID in $RUN_IDS; do
            echo "Checking run ID: $RUN_ID"
            ARTIFACTS=$(gh api -X GET /repos/${{ github.repository }}/actions/runs/$RUN_ID/artifacts)
            ARTIFACT_ID=$(echo "$ARTIFACTS" | jq '.artifacts[] | select(.name == "opendos.img") | .id' || true)

            if [ -n "$ARTIFACT_ID" ]; then
              echo "Found artifact ID: $ARTIFACT_ID"
              mkdir -p artifact
              gh api -H "Accept: application/vnd.github+json" \
                /repos/${{ github.repository }}/actions/artifacts/$ARTIFACT_ID/zip \
                > artifact.zip

              unzip artifact.zip -d artifact
              ls -al artifact
              break
            fi
          done

          if [ ! -f artifact/opendos.img ]; then
            echo "‚ùå Artifact not found!"
            exit 1
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.TAG_NAME }}
          name: ${{ steps.tag.outputs.TAG_NAME }}
          body: |
            New release: **${{ steps.tag.outputs.TAG_NAME }}**

            ## Recent changes:
            ${{ steps.changelog.outputs.log }}

            [Full changelog](${{ steps.compare_url.outputs.url }})
          files: artifact/opendos.img
